name: Build

on:
  push:
    paths:
    - '**.cs'
    - '**.csproj'
    - '**.sln'
    - 'Dockerfile'
    - '.dockerignore'
    - '.github/workflows/build.yml'
    branches:
    - '**'
    tags:
    - '*.*.*'
  pull_request:
    branches:
    - '**'
  workflow_dispatch:

env:
  REGISTRY_NAME: ghcr.io

jobs:
  build:
    name: Ubuntu
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Clone Repository
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Login to Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY_NAME }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Add GitHub Packages Source
      run: |
        dotnet nuget add source \
          --name github \
          --username ${{ github.repository_owner }} \
          --password ${{ secrets.GITHUB_TOKEN }} \
          --store-password-in-clear-text \
          "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build Project
      run: dotnet build --configuration Release --no-restore

    - name: Test Project
      run: dotnet test --configuration Release --no-build --verbosity normal

    - name: Upload Build
      uses: actions/upload-artifact@v3
      with:
        name: TwitchBot
        path: |
          ./bin/Release/net6.0/*.dll
          ./bin/Release/net6.0/TwitchBot.deps.json
          ./bin/Release/net6.0/TwitchBot.runtimeconfig.json
          ./bin/Release/net6.0/runtimes/*/lib/*/*.dll

    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: TwitchBot
        path: ./artifacts

    - name: Extract Metadata for Docker
      id: metadata
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY_NAME }}/${{ github.actor }}/twitchbot
        flavor: latest=true
        tags: |
          type=ref,event=pr
          type=ref,event=branch
          type=semver,pattern={{major}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}.{{minor}}.{{patch}}
          type=sha,format=short,prefix=commit-

    - name: Build & Push Docker Image
      uses: docker/build-push-action@v3
      with:
        file: ./Dockerfile
        context: ./artifacts
        push: ${{ github.event_name != 'pull_request' }}
        pull: true
        tags: ${{ steps.metadata.outputs.tags }}
        labels: ${{ steps.metadata.outputs.labels }}

    - name: Bundle Build Artifacts
      if: ${{ github.ref_type == 'tag' && github.event_name != 'pull_request' }}
      run: |
        cd ./artifacts
        zip -r ../TwitchBot.zip $(find ./)

    - name: Create Release
      if: ${{ github.ref_type == 'tag' && github.event_name != 'pull_request' }}
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: ${{ github.ref_name }}
        draft: true
        files: ./TwitchBot.zip
        body: |
          ```
          ${{ steps.metadata.outputs.tags }}
          ```
